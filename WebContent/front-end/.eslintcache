[{"D:\\project\\contact_homepage\\WebContent\\front-end\\src\\index.tsx":"1","D:\\project\\contact_homepage\\WebContent\\front-end\\src\\reportWebVitals.ts":"2","D:\\project\\contact_homepage\\WebContent\\front-end\\src\\App.tsx":"3","D:\\project\\contact_homepage\\WebContent\\front-end\\src\\stores\\index.tsx":"4","D:\\project\\contact_homepage\\WebContent\\front-end\\src\\stores\\ContactStore.tsx":"5","D:\\project\\contact_homepage\\WebContent\\front-end\\src\\component\\ClickButton.tsx":"6","D:\\project\\contact_homepage\\WebContent\\front-end\\src\\component\\Main.tsx":"7"},{"size":546,"mtime":1608358291423,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1608108903382,"results":"10","hashOfConfig":"9"},{"size":254,"mtime":1609230513701,"results":"11","hashOfConfig":"9"},{"size":149,"mtime":1608110446323,"results":"12","hashOfConfig":"9"},{"size":515,"mtime":1608112370930,"results":"13","hashOfConfig":"9"},{"size":1186,"mtime":1608360115859,"results":"14","hashOfConfig":"9"},{"size":1166,"mtime":1609241222781,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1x1z33l",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\contact_homepage\\WebContent\\front-end\\src\\index.tsx",[],["33","34"],"D:\\project\\contact_homepage\\WebContent\\front-end\\src\\reportWebVitals.ts",[],"D:\\project\\contact_homepage\\WebContent\\front-end\\src\\App.tsx",[],"D:\\project\\contact_homepage\\WebContent\\front-end\\src\\stores\\index.tsx",[],"D:\\project\\contact_homepage\\WebContent\\front-end\\src\\stores\\ContactStore.tsx",[],"D:\\project\\contact_homepage\\WebContent\\front-end\\src\\component\\ClickButton.tsx",["35"],"import React,{Component} from \"react\";\r\nimport {inject,observer} from \"mobx-react\";\r\nimport axios from \"axios\";\r\nimport { IContactStore } from \"../stores/IContactStore\";\r\n\r\ntype Props ={\r\n    contactStore?:IContactStore;\r\n}\r\n\r\n@inject(\"contactStore\")\r\n@observer\r\nclass ClickButton extends Component<Props, {}>{\r\n    apiTestBtn=()=>{\r\n        //TODO 서버를 연결 시키고 나서 데이터를 받아오지 못할때 contactStore뒤에 ? 가 영향이 있는지 확인학기\r\n        //contactStore뒤에 ? 가 무슨 동작을 하는건지 찾기\r\n        this.props.contactStore?.ApiTest();\r\n    } \r\n\r\n    // testApi = async()=>{\r\n    //     try{\r\n    //         const apiData = await axios.get('http://localhost:8081/springMVCXml/');\r\n    //         return console.log(apiData);\r\n    //     }catch(error){  \r\n    //         console.log(\":::error::::\",error);\r\n    //     }\r\n    // }\r\n    componentDidMount(){\r\n        // this.testApi();\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                hyoju\r\n                {/* <button onClick={this.apiTestBtn}>API button</button> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClickButton;",["36","37"],"D:\\project\\contact_homepage\\WebContent\\front-end\\src\\component\\Main.tsx",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":13},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]